{"ast":null,"code":"import { getDeckInstance, addLayer, removeLayer, updateLayer, drawLayer } from './deck-utils';\nexport default class MapboxLayer {\n  constructor(props) {\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  onAdd(map, gl) {\n    this.map = map;\n    this.deck = getDeckInstance({\n      map,\n      gl,\n      deck: this.props.deck\n    });\n    addLayer(this.deck, this);\n  }\n\n  onRemove() {\n    removeLayer(this.deck, this);\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props, {\n      id: this.id\n    });\n\n    if (this.deck) {\n      updateLayer(this.deck, this);\n    }\n  }\n\n  render(gl, matrix) {\n    drawLayer(this.deck, this.map, this);\n  }\n\n}","map":{"version":3,"sources":["../../src/mapbox-layer.js"],"names":["constructor","props","onAdd","getDeckInstance","deck","addLayer","onRemove","removeLayer","setProps","Object","id","updateLayer","render","drawLayer"],"mappings":"AAAA,SAAA,eAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,QAAA,cAAA;AAEA,eAAe,MAAA,WAAA,CAAkB;AAE/BA,EAAAA,WAAW,CAAA,KAAA,EAAQ;AACjB,QAAI,CAACC,KAAK,CAAV,EAAA,EAAe;AACb,YAAM,IAAA,KAAA,CAAN,8BAAM,CAAN;AACD;;AAED,SAAA,EAAA,GAAUA,KAAK,CAAf,EAAA;AACA,SAAA,IAAA,GAAA,QAAA;AACA,SAAA,aAAA,GAAqBA,KAAK,CAALA,aAAAA,IAArB,IAAA;AACA,SAAA,GAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACD;;AAIDC,EAAAA,KAAK,CAAA,GAAA,EAAA,EAAA,EAAU;AACb,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,IAAA,GAAYC,eAAe,CAAC;AAAA,MAAA,GAAA;AAAA,MAAA,EAAA;AAAUC,MAAAA,IAAI,EAAE,KAAA,KAAA,CAAWA;AAA3B,KAAD,CAA3B;AACAC,IAAAA,QAAQ,CAAC,KAAD,IAAA,EAARA,IAAQ,CAARA;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACTC,IAAAA,WAAW,CAAC,KAAD,IAAA,EAAXA,IAAW,CAAXA;AACD;;AAEDC,EAAAA,QAAQ,CAAA,KAAA,EAAQ;AAEdC,IAAAA,MAAM,CAANA,MAAAA,CAAc,KAAdA,KAAAA,EAAAA,KAAAA,EAAiC;AAACC,MAAAA,EAAE,EAAE,KAAKA;AAAV,KAAjCD;;AAEA,QAAI,KAAJ,IAAA,EAAe;AACbE,MAAAA,WAAW,CAAC,KAAD,IAAA,EAAXA,IAAW,CAAXA;AACD;AACF;;AAEDC,EAAAA,MAAM,CAAA,EAAA,EAAA,MAAA,EAAa;AACjBC,IAAAA,SAAS,CAAC,KAAD,IAAA,EAAY,KAAZ,GAAA,EAATA,IAAS,CAATA;AACD;;AAtC8B","sourcesContent":["import {getDeckInstance, addLayer, removeLayer, updateLayer, drawLayer} from './deck-utils';\n\nexport default class MapboxLayer {\n  /* eslint-disable no-this-before-super */\n  constructor(props) {\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  /* Mapbox custom layer methods */\n\n  onAdd(map, gl) {\n    this.map = map;\n    this.deck = getDeckInstance({map, gl, deck: this.props.deck});\n    addLayer(this.deck, this);\n  }\n\n  onRemove() {\n    removeLayer(this.deck, this);\n  }\n\n  setProps(props) {\n    // id cannot be changed\n    Object.assign(this.props, props, {id: this.id});\n    // safe guard in case setProps is called before onAdd\n    if (this.deck) {\n      updateLayer(this.deck, this);\n    }\n  }\n\n  render(gl, matrix) {\n    drawLayer(this.deck, this.map, this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}