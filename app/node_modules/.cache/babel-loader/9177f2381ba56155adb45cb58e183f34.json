{"ast":null,"code":"var _jsxFileName = \"/home/rage/Documents/projects/TicinoStars/app/src/Map.js\",\n    _s = $RefreshSig$();\n\n// import { Popup } from \"mapbox-gl\";\nimport React, { useState } from \"react\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport * as TicinoStars from \"./data/stars.json\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoicmFnZTk5NyIsImEiOiJja3J4Zmd4dmcwcHR4Mm5uOHl0cXNxNWdhIn0.spr-aZIVDY4VGYCUh6K11w\"; // Map centered in Ticino\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 8.874958110344565,\n  latitude: 46.22002254055144,\n  zoom: 8.7,\n  pitch: 0,\n  bearing: 0,\n  width: \"100wh\",\n  height: \"100vh\"\n};\nconst MAP_BOUNDS = [[8.3331298828125, 45.69850658738846], // Southwest coordinates\n[9.43450927734375, 46.59190029349218] // Northeast coordinates\n];\n\nfunction Map() {\n  _s();\n\n  const [viewPort, setViewPort] = useState(INITIAL_VIEW_STATE);\n  const [selectedStar, setSelectedStar] = useState({});\n  const [show, setShow] = useState(false);\n\n  const goToCoords = coords => {\n    setViewPort({ ...viewPort,\n      longitude: coords[0],\n      latitude: coords[1],\n      zoom: 10,\n      transitionDuration: 2000,\n      transitionInterpolator: new FlyToInterpolator()\n    });\n  };\n\n  const clampBoundary = viewPort => {\n    // Handles viewport boundary limit\n    // SouthWeast boundary\n    if (viewPort.longitude < MAP_BOUNDS[0][0]) {\n      viewPort.longitude = MAP_BOUNDS[0][0];\n    }\n\n    if (viewPort.latitude < MAP_BOUNDS[0][1]) {\n      viewPort.latitude = MAP_BOUNDS[0][1];\n    } // NorthEast boundary\n\n\n    if (viewPort.longitude > MAP_BOUNDS[1][0]) {\n      viewPort.longitude = MAP_BOUNDS[1][0];\n    }\n\n    if (viewPort.latitude > MAP_BOUNDS[1][1]) {\n      viewPort.latitude = MAP_BOUNDS[1][1];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      setShow: setShow,\n      content: selectedStar.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewPort,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: viewPort => {\n        clampBoundary(viewPort);\n        setViewPort(viewPort);\n      },\n      mapStyle: \"mapbox://styles/rage997/ckrwcnr5w1qg118qpghum80zk\",\n      children: TicinoStars.features.map(star => {\n        let coords = star.geometry.coordinates;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          longitude: coords[0],\n          latitude: coords[1],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"marker-btn\",\n            onClick: e => {\n              e.preventDefault();\n\n              if (star.key !== selectedStar.key) {\n                setSelectedStar(star);\n                setShow(true);\n                goToCoords(star.geometry.coordinates);\n              } else {\n                setShow(!show);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/meme.png\",\n              alt: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, star.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"2lb2dnpI1mIUOzPVYSv+Hg/Naho=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/rage/Documents/projects/TicinoStars/app/src/Map.js"],"names":["React","useState","ReactMapGL","Marker","FlyToInterpolator","TicinoStars","Modal","MAPBOX_TOKEN","INITIAL_VIEW_STATE","longitude","latitude","zoom","pitch","bearing","width","height","MAP_BOUNDS","Map","viewPort","setViewPort","selectedStar","setSelectedStar","show","setShow","goToCoords","coords","transitionDuration","transitionInterpolator","clampBoundary","content","features","map","star","geometry","coordinates","e","preventDefault","key"],"mappings":"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","sourcesContent":["// import { Popup } from \"mapbox-gl\";\nimport React, { useState } from \"react\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport * as TicinoStars from \"./data/stars.json\";\nimport Modal from \"./Modal\";\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmFnZTk5NyIsImEiOiJja3J4Zmd4dmcwcHR4Mm5uOHl0cXNxNWdhIn0.spr-aZIVDY4VGYCUh6K11w\";\n\n// Map centered in Ticino\nconst INITIAL_VIEW_STATE = {\n  longitude: 8.874958110344565,\n  latitude: 46.22002254055144,\n  zoom: 8.7,\n  pitch: 0,\n  bearing: 0,\n  width: \"100wh\",\n  height: \"100vh\",\n};\n\nconst MAP_BOUNDS = [\n  [8.3331298828125, 45.69850658738846], // Southwest coordinates\n  [9.43450927734375, 46.59190029349218] // Northeast coordinates\n  ];\n   \n\nfunction Map() {\n  const [viewPort, setViewPort] = useState(INITIAL_VIEW_STATE);\n  const [selectedStar, setSelectedStar] = useState({});\n  const [show, setShow] = useState(false);\n\n  const goToCoords = (coords) => {\n    setViewPort({\n      ...viewPort,\n      longitude: coords[0],\n      latitude: coords[1],\n      zoom: 10,\n      transitionDuration: 2000,\n      transitionInterpolator: new FlyToInterpolator(),\n    });\n  };\n\n  const clampBoundary = (viewPort) => {\n    // Handles viewport boundary limit\n    // SouthWeast boundary\n    if (viewPort.longitude < MAP_BOUNDS[0][0]) {\n      viewPort.longitude = MAP_BOUNDS[0][0];\n    }\n    if (viewPort.latitude < MAP_BOUNDS[0][1]) {\n      viewPort.latitude = MAP_BOUNDS[0][1];\n    }\n    // NorthEast boundary\n    if (viewPort.longitude > MAP_BOUNDS[1][0]) {\n      viewPort.longitude = MAP_BOUNDS[1][0];\n    }\n    if (viewPort.latitude > MAP_BOUNDS[1][1]) {\n      viewPort.latitude = MAP_BOUNDS[1][1];\n    }\n  }  \n\n  return (\n    <div id=\"map\">\n      <Modal show={show} setShow={setShow} content={selectedStar.content} />\n\n      <ReactMapGL\n        {...viewPort}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={(viewPort) => {\n          clampBoundary(viewPort);\n          setViewPort(viewPort);\n        }}\n        mapStyle=\"mapbox://styles/rage997/ckrwcnr5w1qg118qpghum80zk\"\n      >\n        {TicinoStars.features.map((star) => {\n          let coords = star.geometry.coordinates;\n          return (\n            <Marker key={star.key} longitude={coords[0]} latitude={coords[1]}>\n              <button\n                className=\"marker-btn\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (star.key !== selectedStar.key) {\n                    setSelectedStar(star);\n                    setShow(true);\n                    goToCoords(star.geometry.coordinates)\n                  } else {\n                    setShow(!show);\n                  }\n                }}\n              >\n                <img src=\"/meme.png\" alt=\"test\"></img>\n              </button>\n            </Marker>\n          );\n        })}\n\n        {/* {selectedStar ? (\n        // console.log(selectedStar)\n        <Popup longitude={ selectedStar.geometry.coordinates[0]} \n          latitude={ selectedStar.geometry.coordinates[1]}>\n          <div>\n            Hello there\n          </div>\n        </Popup>\n      ) : null} */}\n      </ReactMapGL>\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}